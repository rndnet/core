apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-rndnet-server-deployment
  labels:
    app: kube-rndnet-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-rndnet-server
  template:
    metadata:
      labels:
        app: kube-rndnet-server
    spec:
      containers:
      - name: kube-rndnet-server
        image: rndnet/server
        imagePullPolicy: "Always"
        #args: ["--config", "/etc/rndnet/rndnet_server.conf", "--accesslog", "/var/log/rndnet_server.log",  "--errorlog", "/var/log/rndnet_server_err.log",  "--bind", "0.0.0.0:6000", "--no-ssl", "--no-cleanup"]
        args: ["--config", "/etc/rndnet/rndnet_server.conf", "--accesslog", "/var/log/rndnet_server.log",  "--errorlog", "/var/log/rndnet_server_err.log",  "--bind", "0.0.0.0:6000", "--no-ssl", "--no-cleanup", "-w", "10"]
        volumeMounts:
        - name: rndnet-server-data-volume
          mountPath: "/etc/rndnet/"
          readOnly: true
        - name: rndnet-server-data-volume
          mountPath: "/root/.pgpass"
          subPath: ".pgpass"
          readOnly: true
        workingDir: /
        ports:
        - containerPort: 6000
          protocol: TCP
        resources:
          limits:
            memory: 16Gi
            cpu: 20
          requests:
            memory: 2Gi
            cpu: 10
      #hostAliases:
      #- ip: "10.100.1.1"
      #  hostnames:
      #  - "host1"
      #- ip: "10.100.1.2"
      #    hostnames:
      #    - "host2"
      #nodeName: host1
      #dnsPolicy: Defaul
      volumes:
      - name: rndnet-server-data-volume
        secret:
         secretName: rndnet-server-data
         items:
         - key: conf
           path: rndnet_server.conf
         - key: pgpass
           path: .pgpass
           mode: 0600
